generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enum untuk jenis transaksi (operasional, non-operasional, prive)
enum TransactionType {
  OPERASIONAL
  NON_OPERASIONAL
  PRIVE
}

// Enum untuk status transaksi
enum TransactionStatus {
  PENDING
  APPROVED
  REJECTED
}

// Enum untuk tipe kategori (operasional, non-operasional, prive)
enum CategoryType {
  OPERASIONAL
  NON_OPERASIONAL
  PRIVE
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  name        String
  password    String
  role        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  transactions Transaction[]
}

model Transaction {
  id            Int              @id @default(autoincrement())
  title         String
  date          DateTime
  type          TransactionType  // Menggunakan enum untuk tipe transaksi
  description   String?
  reporterName  String            // Nama user yang login dan mencatat transaksi
  reporterRole  String            // Role user yang login dan mencatat transaksi
  cost          Float
  status        TransactionStatus @default(PENDING)  // Status pengeluaran
  remarks       String?                           // Catatan bendahara
  imageUrl      String?           // URL dari gambar yang diunggah (opsional)
  userId        Int
  user          User              @relation(fields: [userId], references: [id])
  categoryId    Int               // Relasi ke kategori
  category      Category          @relation(fields: [categoryId], references: [id])
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String         @unique   // Pastikan nama kategori unik
  type         CategoryType             // Gunakan enum untuk tipe kategori
  transactions Transaction[]            // Relasi ke transaksi
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}
